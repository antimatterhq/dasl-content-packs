name: aws_sec_lake_waf_v2
author: Antimatter
description: "A preset for consuming logs generated by AWS WAFv1 logs"
autoloader:
  format: json
  cloudFiles:
    schemaHints: "action string,formatVersion bigint,httpRequest struct<args:string,clientIp:string,country:string,headers:array<struct<name:string,value:string>>,httpMethod:string,httpVersion:string,requestId:string,uri:string>,httpSourceId string,httpSourceName string,nonTerminatingMatchingRules array<string>,rateBasedRuleList array<struct<rateBasedRuleId:string,rateBasedRuleName:string,limitKey:string,maxRateAllowed:int,evaluationWindowSec:string,customValues:array<struct<key:string,name:string,value:string>>>>,requestHeadersInserted string,responseCodeSent int,ruleGroupList array<struct<customerConfig:string,excludedRules:string,nonTerminatingMatchingRules:array<string>,ruleGroupId:string,terminatingRule:struct<ruleId:string,action:string,ruleMatchDetails:array<struct<conditionType:string,sensitivityLevel:string,location:string,matchedData:array<string>>>>>>,terminatingRuleId string,terminatingRuleMatchDetails array<string>,terminatingRuleType string,timestamp timestamp,webaclId string,requestBodySize int,requestBodySizeInspectedByWAF int,labels array<struct<name:string>>,oversizeFields array<string>,ja3Fingerprint string,captchaResponse struct<responseCode:int,solveTimestamp:timestamp,failureReason:string>"
silver:
  transform:
    - name: aws_sec_lake_waf_v2_http_activity
      fields:
        - name: ocsf_activity_id
          expr: CASE WHEN LOWER(httpRequest.httpMethod) = 'connect' THEN 1 WHEN LOWER(httpRequest.httpMethod) = 'delete' THEN 2 WHEN LOWER(httpRequest.httpMethod) = 'get' THEN 3 WHEN LOWER(httpRequest.httpMethod) = 'head' THEN 4 WHEN LOWER(httpRequest.httpMethod) = 'options' THEN 5 WHEN LOWER(httpRequest.httpMethod) = 'post' THEN 6 WHEN LOWER(httpRequest.httpMethod) = 'put' THEN 7 WHEN LOWER(httpRequest.httpMethod) = 'trace' THEN 8 WHEN httpRequest.httpMethod IS NULL OR httpRequest.httpMethod = '' THEN 0 ELSE 99 END
        - name: ocsf_activity_name
          expr: CASE WHEN httpRequest.httpMethod IS NULL OR httpRequest.httpMethod = '' THEN 'Unknown' ELSE CONCAT(UPPER(SUBSTRING(httpRequest.httpMethod, 1, 1)), LOWER(SUBSTRING(httpRequest.httpMethod, 2))) END
        - name: ocsf_category_uid
          expr: CAST('4' AS INT)
        - name: ocsf_category_name
          literal: Network Activity
        - name: ocsf_class_uid
          expr: CAST('4002' AS INT)
        - name: ocsf_class_name
          literal: HTTP Activity
        - name: ocsf_severity_id
          expr: CAST('99' AS INT)
        - name: ocsf_severity
          literal: Other
        - name: ocsf_type_uid
          expr: CAST(400200 + (CASE WHEN LOWER(httpRequest.httpMethod) = 'connect' THEN 1 WHEN LOWER(httpRequest.httpMethod) = 'delete' THEN 2 WHEN LOWER(httpRequest.httpMethod) = 'get' THEN 3 WHEN LOWER(httpRequest.httpMethod) = 'head' THEN 4 WHEN LOWER(httpRequest.httpMethod) = 'options' THEN 5 WHEN LOWER(httpRequest.httpMethod) = 'post' THEN 6 WHEN LOWER(httpRequest.httpMethod) = 'put' THEN 7 WHEN LOWER(httpRequest.httpMethod) = 'trace' THEN 8 WHEN httpRequest.httpMethod IS NULL OR httpRequest.httpMethod = '' THEN 0 ELSE 99 END) AS BIGINT)
        - name: ocsf_type_name
          expr: "CONCAT('HTTP Activity: ', httpRequest.httpMethod)"
        - name: time
          from: timestamp
        - name: action
          expr: CASE WHEN action = 'ALLOW' THEN 'Allowed' WHEN action = 'BLOCK' then 'Denied' ELSE 'Unknown' END
        - name: action_id
          expr: CASE WHEN action = 'ALLOW' THEN 1 WHEN action = 'BLOCK' then 2 ELSE 0 END
        - name: log_action
          from: action
        - name: ocsf_metadata.uid
          from: httpRequest.requestId
        - name: ocsf_metadata.product.name
          literal: "WAFv2"
        - name: ocsf_metadata.log_version
          expr: CAST(formatVersion AS string)
        - name: ocsf_metadata.log_provider
          from: webaclId
        - name: ocsf_metadata.logged_time
          from: timestamp
        - name: ocsf_metadata.tags
          from: labels
        - name: ocsf_http_request.body_length
          from: requestBodySize
        - name: ocsf_http_request.http_method
          from: httpRequest.httpMethod
        - name: ocsf_http_request.args
          from: httpRequest.args
        - name: ocsf_http_request.version
          from: httpRequest.httpVersion
        - name: ocsf_http_request.url.url_string
          from: httpRequest.uri
        - name: ocsf_http_request.http_headers
          from: httpRequest.headers
        - name: ocsf_http_request.user_agent
          expr: CASE WHEN SIZE(filter(httpRequest.headers, x -> x.name = 'User-Agent')) = 1 THEN element_at(filter(httpRequest.headers, x -> x.name = 'User-Agent'), 1).value ELSE null END
        - name: ocsf_http_response.code
          from: responseCodeSent
        - name: ocsf_src_endpoint.ip
          from: httpRequest.clientIp
        - name: ocsf_src_endpoint.location.country
          from: httpRequest.country
        - name: ocsf_tls.certificate.fingerprints
          expr: ARRAY(named_struct('value', ja3Fingerprint))
        - name: rate_limit
          from: rateBasedRule.maxRateAllowed
        - name: rate_based_rule_id
          from: rateBasedRule.rateBasedRuleId
        - name: rate_based_rule_keys
          expr: CASE WHEN rateBasedRule.limitKey = 'CUSTOMKEYS' THEN transform(rateBasedRule.customValues, x -> CONCAT(x.key, ':', x.name, ':', x.value)) ELSE ARRAY() END
        - name: rate_based_rule_location
          expr: concat_ws(',', array_distinct(rateBasedRule.customValues.key))
        - name: terminatingRuleType
          from: terminatingRuleType
        - name: nonTerminatingMatchingRule
          from: nonTerminatingMatchingRule
        - name: disposition
          expr: CASE WHEN action = 'ALLOW' THEN 'Allowed' WHEN action = 'BLOCK' then 'Blocked' ELSE 'Unknown' END
        - name: disposition_id
          expr: CASE WHEN action = 'ALLOW' THEN 1 WHEN action = 'BLOCK' then 2 ELSE 0 END
        - name: ocsf_observables
          expr: "ARRAY(
            named_struct('name', 'oversizeFields', 'type_id', 99, 'type', 'Other', 'value', to_json(oversizeFields)),
            named_struct('name', 'httpSourceId', 'type_id', 10, 'type', 'Resource UID', 'value', httpSourceId),
            named_struct('name', 'httpSourceName', 'type_id', 1, 'type', 'Hostname', 'value', httpSourceName)
          )"
        - name: firewall_rule_condition
          expr: CASE WHEN log_action = 'BLOCK' AND (terminatingRuleType = 'REGULAR' OR terminatingRuleType = 'GROUP') THEN term_conditionType WHEN log_action = 'ALLOW' AND (terminatingRuleType = 'REGULAR' OR terminatingRuleType = 'GROUP') THEN nonTerm_conditionType ELSE null END
        - name: firewall_rule_match_location
          expr: CASE WHEN log_action = 'BLOCK' AND (terminatingRuleType = 'REGULAR' OR terminatingRuleType = 'GROUP') THEN term_location WHEN log_action = 'ALLOW' AND (terminatingRuleType = 'REGULAR' OR terminatingRuleType = 'GROUP') THEN nonTerm_location WHEN terminatingRuleType = 'RATE_BASED' THEN rate_based_rule_location ELSE null END
        - name: firewall_rule_match_details
          expr: CASE WHEN log_action = 'BLOCK' AND (terminatingRuleType = 'REGULAR' OR terminatingRuleType = 'GROUP') THEN term_matchedData WHEN log_action = 'ALLOW' AND (terminatingRuleType = 'REGULAR' OR terminatingRuleType = 'GROUP') THEN nonTerm_matchedData WHEN terminatingRuleType = 'RATE_BASED' THEN rate_based_rule_keys ELSE null END
        - name: firewall_rule_sensitivity
          expr: CASE WHEN log_action = 'BLOCK' AND (terminatingRuleType = 'REGULAR' OR terminatingRuleType = 'GROUP') THEN term_sensitivityLevel WHEN log_action = 'ALLOW' AND (terminatingRuleType = 'REGULAR' OR terminatingRuleType = 'GROUP') THEN nonTerm_sensitivityLevel ELSE null END
        - name: firewall_rule_uid
          expr: CASE WHEN log_action = 'BLOCK' AND (terminatingRuleType = 'REGULAR' OR terminatingRuleType = 'GROUP') THEN terminatingRuleId WHEN log_action = 'ALLOW' AND (terminatingRuleType = 'REGULAR' OR terminatingRuleType = 'GROUP') THEN nonTerminatingMatchingRule.ruleId WHEN terminatingRuleType = 'RATE_BASED' THEN rate_based_rule_id ELSE null END
        - name: firewall_rule_rate_limit
          expr: CASE WHEN terminatingRuleType = 'RATE_BASED' THEN rate_limit ELSE null END
        - name: ocsf_unmapped
          expr: to_json(named_struct('ruleGroupList', ruleGroupList, 'rateBasedRuleList', rateBasedRuleList, 'captchaResponse', captchaResponse))
      utils:
        temporaryFields:
          - name: nonTerminatingMatchingRule
            expr: explode_outer(transform(nonTerminatingMatchingRules, x -> from_json(x, 'struct<ruleId:string,action:string,ruleMatchDetails:array<struct<conditionType:string,location:string,matchedData:array<string>,matchedFieldName:string,sensitivityLevel:string>>>')))
          - name: rateBasedRule
            expr: explode_outer(rateBasedRuleList)
          - name: terminatingMatchRuleDetails
            expr: explode_outer(transform(terminatingRuleMatchDetails, x -> from_json(x, 'struct<conditionType:string,location:string,matchedData:array<string>,matchedFieldName:string,sensitivityLevel:string>')))
          - name: nonTerminatingMatchingRuleDetails
            expr: explode_outer(nonTerminatingMatchingRule.ruleMatchDetails)
          - name: nonTerm_conditionType
            alias: nonTerminatingMatchingRuleDetails.conditionType
          - name: nonTerm_location
            alias: nonTerminatingMatchingRuleDetails.location
          - name: nonTerm_matchedData
            alias: nonTerminatingMatchingRuleDetails.matchedData
          - name: nonTerm_matchedFieldName
            alias: nonTerminatingMatchingRuleDetails.matchedFieldName
          - name: nonTerm_sensitivityLevel
            alias: nonTerminatingMatchingRuleDetails.sensitivityLevel
          - name: term_conditionType
            alias: terminatingMatchRuleDetails.conditionType
          - name: term_location
            alias: terminatingMatchRuleDetails.location
          - name: term_matchedData
            alias: terminatingMatchRuleDetails.matchedData
          - name: term_matchedFieldName
            alias: terminatingMatchRuleDetails.matchedFieldName
          - name: term_sensitivityLevel
            alias: terminatingMatchRuleDetails.sensitivityLevel
        unreferencedColumns:
          preserve: true
gold:
  - name: http_activity
    input: aws_sec_lake_waf_v2_http_activity
    fields:
      - name: activity_id
        from: ocsf_activity_id
      - name: activity_name
        from: ocsf_activity_name
      - name: category_uid
        from: ocsf_category_uid
      - name: category_name
        from: ocsf_category_name
      - name: class_uid
        from: ocsf_class_uid
      - name: class_name
        from: ocsf_class_name
      - name: severity_id
        from: ocsf_severity_id
      - name: severity
        from: ocsf_severity
      - name: type_uid
        from: ocsf_type_uid
      - name: type_name
        from: ocsf_type_name
      - name: time
        from: time
      - name: action
        from: action
      - name: action_id
        from: action_id
      - name: disposition
        from: disposition
      - name: disposition_id
        from: disposition_id
      - name: metadata
        from: ocsf_metadata
      - name: http_request
        from: ocsf_http_request
      - name: http_response
        from: ocsf_http_response
      - name: src_endpoint
        from: ocsf_src_endpoint
      - name: observables
        from: ocsf_observables
      - name: firewall_rule.condition
        from: firewall_rule_condition
      - name: firewall_rule.match_location
        from: firewall_rule_match_location
      - name: firewall_rule.match_details
        from: firewall_rule_match_details
      - name: firewall_rule.sensitivity
        from: firewall_rule_sensitivity
      - name: firewall_rule.uid
        from: firewall_rule_uid
      - name: firewall_rule.rate_limit
        from: firewall_rule_rate_limit
      - name: unmapped
        expr: CAST(ocsf_unmapped AS VARIANT)