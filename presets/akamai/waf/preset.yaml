name: akamai_waf
author: Antimatter
description: "A preset for consuming logs generated by Akamai WAF logs"
autoloader:
  format: json
  cloudFiles:
    schemaHints: "attackData struct<clientIP:string,clientReputation:string,configId:string,policyId:string,ruleActions:string,ruleData:string,ruleMessages:string,ruleSelectors:string,ruleTags:string,ruleVersions:string,rules:string>,format string,geo struct<asn:string,city:string,continent:string,country:string,regionCode:string>,httpMessage struct<bytes:string,host:string,method:string,path:string,port:string,protocol:string,query:string,requestHeaders:map<string,string>,requestId:string,responseHeaders:map<string,string>,start:string,status:string,tls:string>,serviceID string,type string,version string"
silver:
  transform:
    - name: akamai_waf_http_activity
      fields:
        - name: ocsf_activity_id
          expr: CASE WHEN LOWER(httpMessage.method) = 'connect' THEN 1 WHEN LOWER(httpMessage.method) = 'delete' THEN 2 WHEN LOWER(httpMessage.method) = 'get' THEN 3 WHEN LOWER(httpMessage.method) = 'head' THEN 4 WHEN LOWER(httpMessage.method) = 'options' THEN 5 WHEN LOWER(httpMessage.method) = 'post' THEN 6 WHEN LOWER(httpMessage.method) = 'put' THEN 7 WHEN LOWER(httpMessage.method) = 'trace' THEN 8 WHEN httpMessage.method IS NULL OR httpMessage.method = '' THEN 0 ELSE 99 END
        - name: ocsf_activity_name
          expr: CASE WHEN httpMessage.method IS NULL OR httpMessage.method = '' THEN httpMessage.method ELSE CONCAT(UPPER(SUBSTRING(httpMessage.method, 1, 1)), LOWER(SUBSTRING(httpMessage.method, 2))) END
        - name: ocsf_category_uid
          expr: CAST('4' AS INT)
        - name: ocsf_category_name
          literal: Network Activity
        - name: ocsf_class_uid
          expr: CAST('4002' AS INT)
        - name: ocsf_class_name
          literal: HTTP Activity
        - name: ocsf_severity_id
          expr: CAST('0' AS INT)
        - name: ocsf_severity
          literal: Unknown
        - name: ocsf_type_uid
          expr: CAST((400200 + CASE WHEN LOWER(httpMessage.method) = 'connect' THEN 1 WHEN LOWER(httpMessage.method) = 'delete' THEN 2 WHEN LOWER(httpMessage.method) = 'get' THEN 3 WHEN LOWER(httpMessage.method) = 'head' THEN 4 WHEN LOWER(httpMessage.method) = 'options' THEN 5 WHEN LOWER(httpMessage.method) = 'post' THEN 6 WHEN LOWER(httpMessage.method) = 'put' THEN 7 WHEN LOWER(httpMessage.method) = 'trace' THEN 8 WHEN httpMessage.method IS NULL OR httpMessage.method = '' THEN 0 ELSE 99 END) AS BIGINT)
        - name: ocsf_type_name
          expr: "CASE WHEN httpMessage.method IS NOT NULL THEN CONCAT('HTTP Activity: ', httpMessage.method) ELSE null END"
        - name: time
          expr: timestamp_seconds(cast(httpMessage.start AS BIGINT))
        - name: http_status
          expr: CAST(httpMessage.status AS int)
        - name: ocsf_metadata.uid
          expr: attackData.configId
        - name: ocsf_metadata.log_provider
          from: type
        - name: ocsf_metadata.product.name
          literal: Kona
        - name: ocsf_metadata.product.version
          from: version
        - name: ocsf_metadata.product.vendor_name
          literal: Akamai
        - name: ocsf_http_request.length
          expr: CAST(httpMessage.bytes AS INT)
        - name: ocsf_http_request.http_method
          from: httpMessage.Method
        - name: ocsf_http_request.url.hostname
          from: httpMessage.host
        - name: ocsf_http_request.url.path
          from: httpMessage.path
        - name: ocsf_http_request.url.query_string
          from: httpMessage.query
        - name: ocsf_http_request.url.port
          expr: CAST(httpMessage.port AS INT)
        - name: ocsf_http_request.user_agent
          from: httpMessage.requestHeaders.`User-Agent`
        - name: ocsf_http_request.version
          from: httpMessage.protocol
        - name: ocsf_http_request.http_headers
          expr: "transform(
                  map_entries(
                    from_json(to_json(httpMessage.requestHeaders), 'map<string,string>')
                  ),
                  x -> named_struct('name', x.key, 'value', x.value)
                )"
        - name: ocsf_http_response.code
          expr: CAST(httpMessage.status AS int)
        - name: ocsf_http_response.length
          expr: CAST(httpMessage.bytes AS INT)
        - name: ocsf_http_response.http_headers
          expr: "transform(
                  map_entries(
                    from_json(to_json(httpMessage.responseHeaders), 'map<string,string>')
                  ),
                  x -> named_struct('name', x.key, 'value', x.value)
                )"
        - name: ocsf_tls.version
          from: httpMessage.tls
        - name: ocsf_src_endpoint.ip
          from: attackData.clientIP
        - name: ocsf_src_endpoint.location.city
          from: geo.city
        - name: ocsf_src_endpoint.location.continent
          from: geo.continent
        - name: ocsf_src_endpoint.location.country
          from: geo.country
        - name: ocsf_src_endpoint.location.region
          from: geo.regionCode
        - name: ocsf_policy.uid
          from: attackData.policyId
        - name: ocsf_firewall_rule.name
          from: attackData.rules
        - name: ocsf_firewall_rule.version
          from: attackData.ruleVersions
        - name: ocsf_firewall_rule.match_details
          expr: "ARRAY(attackData.ruleSelectors)"
        - name: ocsf_firewall_rule.desc
          from: attackData.ruleTags
        - name: message
          from: attackData.ruleMessages
        - name: raw_data
          from: attackData.ruleData
        - name: action
          expr: CASE WHEN attackData.ruleActions = 'deny' THEN 'Denied' WHEN attackData.ruleActions = 'alert' OR attackData.ruleActions = 'monitor' THEN 'Observed' WHEN attackData.ruleActions = 'tarpit' THEN 'Modified' WHEN attackData.ruleActions = 'allow' THEN 'Allowed' ELSE 'Unknown' END
        - name: action_id
          expr: CASE WHEN attackData.ruleActions = 'deny' THEN 2 WHEN attackData.ruleActions = 'alert' OR attackData.ruleActions = 'monitor' THEN 3 WHEN attackData.ruleActions = 'tarpit' THEN 4 WHEN attackData.ruleActions = 'allow' THEN 1 ELSE 0 END
        - name: disposition
          expr: CASE WHEN attackData.ruleActions = 'deny' THEN 'Blocked' WHEN attackData.ruleActions = 'alert' THEN 'Alert' WHEN attackData.ruleActions = 'monitor' THEN 'Logged' WHEN attackData.ruleActions = 'tarpit' THEN 'Delayed' WHEN attackData.ruleActions = 'allow' THEN 'Allowed' ELSE 'Unknown' END
        - name: disposition_id
          expr: CASE WHEN attackData.ruleActions = 'deny' THEN 2 WHEN attackData.ruleActions = 'alert' THEN 19 WHEN attackData.ruleActions = 'monitor' THEN 17 WHEN attackData.ruleActions = 'tarpit' THEN 14 WHEN attackData.ruleActions = 'allow' THEN 1 ELSE 0 END
        - name: is_alert
          expr: CASE WHEN attackData.ruleActions = 'alert' THEN TRUE ELSE FALSE END
        - name: ocsf_enrichments
          expr: "array(
                  named_struct('name', 'clientReputation', 'value', attackData.clientReputation)
                )"
        - name: ocsf_unmapped
          expr: to_json(named_struct('serviceID', serviceID))
      utils:
        unreferencedColumns:
          preserve: true
gold:
  - name: http_activity
    input: akamai_waf_http_activity
    fields:
      - name: activity_id
        from: ocsf_activity_id
      - name: activity_name
        from: ocsf_activity_name
      - name: category_uid
        from: ocsf_category_uid
      - name: category_name
        from: ocsf_category_name
      - name: class_uid
        from: ocsf_class_uid
      - name: class_name
        from: ocsf_class_name
      - name: severity_id
        from: ocsf_severity_id
      - name: severity
        from: ocsf_severity
      - name: type_uid
        from: ocsf_type_uid
      - name: type_name
        from: ocsf_type_name
      - name: time
        from: time
      - name: start_time
        from: time
      - name: action
        from: action
      - name: action_id
        from: action_id
      - name: disposition
        from: disposition
      - name: disposition_id
        from: disposition_id
      - name: is_alert
        from: is_alert
      - name: http_status
        from: http_status
      - name: metadata
        from: ocsf_metadata
      - name: http_request
        from: ocsf_http_request
      - name: http_response
        from: ocsf_http_response
      - name: src_endpoint
        from: ocsf_src_endpoint
      - name: enrichments
        from: ocsf_enrichments
      - name: tls
        from: ocsf_tls
      - name: policy
        from: ocsf_policy
      - name: firewall_rule
        from: ocsf_firewall_rule
      - name: message
        from: message
      - name: raw_data
        from: raw_data
      - name: unmapped
        expr: CAST(ocsf_unmapped AS VARIANT)
