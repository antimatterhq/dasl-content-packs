name: apache
author: Antimatter
description: "A preset for consuming logs generated by Apache HTTP server 2.0"
autoloader:
  format: text
  cloudFiles:
    schemaHints: "value string"
silver:
  transform:
    - name: apache_common_logs_meta
      fields:
        - name: host
          expr: CASE WHEN trim(regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 1)) IN ('', '-') THEN NULL ELSE regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 1) END
        - name: user
          expr: CASE WHEN trim(regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 2)) IN ('', '-') THEN NULL ELSE regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 2) END
        - name: method
          expr: CASE WHEN trim(regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 3)) IN ('', '-') THEN NULL ELSE regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 3) END
        - name: time_raw
          expr: trim(regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 4))
        - name: timestamp
          expr: to_timestamp(trim(time_raw), 'dd/MMM/yyyy:HH:mm:ss Z')
        - name: path
          expr: CASE WHEN trim(regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 5)) IN ('', '-') THEN NULL ELSE regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 5) END
        - name: code
          expr: CASE WHEN trim(regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 6)) IN ('', '-') THEN NULL ELSE regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 6) END
        - name: size
          expr: CASE WHEN trim(regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 7)) IN ('', '-') THEN NULL ELSE regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 7) END
        - name: referer
          expr: CASE WHEN trim(regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 8)) IN ('', '-') THEN NULL ELSE regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 8) END
        - name: agent
          expr: CASE WHEN trim(regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 9)) IN ('', '-') THEN NULL ELSE regexp_extract(value, r'(\S+) (\S+) (\S+) \[([^]]+)\] \"([^\"]+)\" (\d{3}) (\S+) \"([^\"]*)\" \"([^\"]*)\"', 9) END
        - name: ocsf_activity_id
          expr: CASE WHEN method = 'CONNECT' THEN 1 WHEN method = 'DELETE' THEN 2 WHEN method = 'GET' THEN 3 WHEN method = 'HEAD' THEN 4 WHEN method = 'OPTIONS' THEN 5 WHEN method = 'POST' THEN 6 WHEN method = 'PUT' THEN 7 WHEN method = 'TRACE' THEN 8 ELSE 99 END
      utils:
        unreferencedColumns:
          preserve: true
          embedColumn: unmapped
          embedColumnType: variant

gold:
  - name: http_activity
    input: apache_common_logs_meta
    fields:
      # OCSF required
      - name: activity_id
        from: ocsf_activity_id
      - name: category_uid
        expr: CAST('4' AS INT)
      - name: class_uid
        expr: CAST('4002' AS INT)
      - name: time
        from: timestamp
      - name: metadata.version
        literal: 1.4.0
      - name: severity_id
        expr: CAST('1' AS INT) # Informational
      - name: type_uid
        expr: CAST(CAST('4002' AS INT) * 100 + activity_id AS BIGINT)
      # other OCSF fields
      - name: activity_name
        from: method
      - name: app_name
        literal: "Apache"
      - name: category_name
        literal: "Network Activity"
      - name: class_name
        literal: "HTTP Activity"
      - name: connection_info.boundary_id
        expr: CAST('0' AS INT)
      - name: connection_info.protocol_ver_id
        expr: CAST('0' AS INT)
      - name: dst_endpoint.ip
        from: host
      - name: http_request.http_method
        from: method
      - name: http_response.length
        expr: CAST(size AS INT)
      - name: http_response.code
        expr: CAST(code AS INT)