name: Cisco
author: Antimatter
description: "A preset for consuming Cisco Umbrella DNS logs "
autoloader:
  format: text
  cloudFiles:
    schemaHints: "value string"
silver:
  transform:
    - name: umbrella_dns
      filter: ""
      postFilter: ""
      fields:
        - name: time
          expr: TO_TIMESTAMP(regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 1), 'yyyy-MM-dd HH:mm:ss')
        - name: granular_identity
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 2)
        - name: identities
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 3)
        - name: internal_ip
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 4)
        - name: external_ip
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 5)
        - name: action
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 6)
        - name: query_type
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 7)
        - name: response_code
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 8)
        - name: domain
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 9)
        - name: categories
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 10)
        - name: granular_identity_type
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 11)
        - name: identity_types
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 12)
        - name: blocked_categories
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"$', 13)
        - name: rule_id
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"(?:,\"([^\"]*)\")?(?:,\"([^\"]*)\")?(?:,\"([^\"]*)\")?$', 14)
        - name: destination_countries
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"(?:,\"([^\"]*)\")?(?:,\"([^\"]*)\")?(?:,\"([^\"]*)\")?$', 15)
        - name: organisation_id
          expr: regexp_extract(value, r'^\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\",\"([^\"]*)\"(?:,\"([^\"]*)\")?(?:,\"([^\"]*)\")?(?:,\"([^\"]*)\")?$', 16)
      utils:
        unreferencedColumns:
          preserve: true
          embedColumn: unmapped
          embedColumnType: struct

gold:
  - name: dns_activity
    input: umbrella_dns
    fields:
      # OCSF required fields
      - name: metadata.version
        literal: 1.4.0
      - name: activity_name
        literal: authentication
      - name: time
        from: time
      - name: activity_id
        expr: CAST('6' AS INT) # all logs are DNS traffic operations
      - name: category_uid
        expr: CAST('4' AS INT)
      - name: class_uid
        expr: CAST('4003' AS INT)
      - name: severity_id
        expr: CAST('1' AS INT) # informational
      - name: type_uid
        expr: CAST('400306' AS BIGINT)
      # Other fields.
      - name: src_endpoint.ip
        from: external_ip
      - name: dst_endpoint.ip
        from: internal_ip
      - name: status_id
        expr: CAST('99' AS INT) # 'Other' as we will be using allow, deny for status
      - name: status
        from: action